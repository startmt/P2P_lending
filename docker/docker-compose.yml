version: "3"

services:
  nginx:
    build:
      context: ../nginx
      dockerfile: Dockerfile
    ports:
      - 80:80
    restart: always
  mysql:
    image: mysql:5.7
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8 --collation-server=utf8_general_ci
    restart: always
    volumes:
      - ./dbdata:/var/lib/mysql
    environment:
      MYSQL_DATABASE: test
      MYSQL_USER: root
      MYSQL_ROOT_PASSWORD: example
  api:
    restart: always
    image: startmt/p2p-auth-service:latest
    # build:
    #   context: ../auth
    #   dockerfile: Dockerfile
    ports:
      - 127.0.0.1:3000:3000
    environment:
      - MYSQL_HOST=mysql
      - REDIS_HOST=redis_auth
      - MINIO_ENDPOINT=minio1
      - MINIO_PORT=9000

    depends_on:
      - redis_auth
      - mysql
      - minio1
  redis_auth:
    image: redis:5-alpine
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    ports:
      - 8080:80
    environment:
      PMA_HOST: mysql
      MYSQL_ROOT_PASSWORD: example
    depends_on:
      - mysql
  web:
    image: startmt/p2p-frontend-service:latest
    # build:
    #   context: ../view
    #   dockerfile: Dockerfile
    ports:
      - 127.0.0.1:8000:8000
    environment:
      - AUTH_SERVICE=http://35.187.230.102/api/auth
      - LENDING_SERVICE=http://35.187.230.102/api/lending
      - TRANSACTION_SERVICE=http://35.187.230.102/api/transaction
      - BLOCKCHAIN_HOST=https://ropsten.infura.io/v3/60b00290d6e841db9c79393ddcb2f00d
      - ACCOUNT_WALLET=0x425649ce990288A41Ccca60B11B5651bf67d9380
    depends_on:
      - api
  minio1:
    image: minio/minio:RELEASE.2020-02-20T22-51-23Z
    volumes:
      - data1-1:/data1
      - data1-2:/data2
    ports:
      - "9000:9000"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server http://minio{1...4}/data{1...2}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio2:
    image: minio/minio:RELEASE.2020-02-20T22-51-23Z
    volumes:
      - data2-1:/data1
      - data2-2:/data2
    ports:
      - "9002:9000"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server http://minio{1...4}/data{1...2}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio3:
    image: minio/minio:RELEASE.2020-02-20T22-51-23Z
    volumes:
      - data3-1:/data1
      - data3-2:/data2
    ports:
      - "9003:9000"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server http://minio{1...4}/data{1...2}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  minio4:
    image: minio/minio:RELEASE.2020-02-20T22-51-23Z
    volumes:
      - data4-1:/data1
      - data4-2:/data2
    ports:
      - "9004:9000"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    command: server http://minio{1...4}/data{1...2}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

## By default this config uses default local driver,
## For custom volumes replace with volume driver configuration.
volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2:
